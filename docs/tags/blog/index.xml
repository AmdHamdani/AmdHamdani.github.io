<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>blog on Noodle Eater</title>
    <link>https://noodle-eater.github.io/tags/blog/</link>
    <description>Recent content in blog on Noodle Eater</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 10 Jun 2022 21:57:37 +0700</lastBuildDate><atom:link href="https://noodle-eater.github.io/tags/blog/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>#2 Egg Farm Update</title>
      <link>https://noodle-eater.github.io/posts/devlog-02-egg-farm/</link>
      <pubDate>Fri, 10 Jun 2022 21:57:37 +0700</pubDate>
      
      <guid>https://noodle-eater.github.io/posts/devlog-02-egg-farm/</guid>
      <description>Welcome to the second update of my farming game, lately I start to lose my motivation to continue this game, I still work on the game and push my self to finish it. Writing this blog is also helping me keep working on my games, I am glad start writing this blog actually. And these are the update of the game.
Sheep Instead of putting the sheep inside a cage, I decide to let them roam in the field and search for food.</description>
    </item>
    
    <item>
      <title>#1 Egg Farm Update</title>
      <link>https://noodle-eater.github.io/posts/devlog-01-egg-farm/</link>
      <pubDate>Tue, 10 May 2022 21:38:10 +0700</pubDate>
      
      <guid>https://noodle-eater.github.io/posts/devlog-01-egg-farm/</guid>
      <description>Welcome to the first update for Egg Farm, the game title may change in the future.
Egg Farm is a relaxing mini farming game, where you can just sit and interact with everything inside the game, plant crops, and ranch animals, and design your own farm.
Since this is a mini-game there will not be many features existing, although I still add more features that seem fun.
There is still more work that needs to be done to finish this game.</description>
    </item>
    
    <item>
      <title>Unreal Engine Overflow</title>
      <link>https://noodle-eater.github.io/posts/ue-overflow/</link>
      <pubDate>Fri, 06 May 2022 21:42:25 +0700</pubDate>
      
      <guid>https://noodle-eater.github.io/posts/ue-overflow/</guid>
      <description>Recently, I start using Unreal Engine to develop games. I did not have proper C++ or Unreal Engine knowledge, I usually use Unity and C#. While learning and using it, I stumbled across some problems. So I decide to make some notes that I can use and share with others.
 Print Enum Into FString StaticEnum&amp;lt;ENUM_TYPE&amp;gt;()-&amp;gt;GetValueAsString(ENUM_VALUE) Format FText FText format = &amp;#34;Item Name: {ItemName}&amp;#34; const FText formattedText = FText::FormatNamed(FTextFormat(format), TEXT(&amp;#34;ItemName&amp;#34;), itemName); Loop UDataTable itemDT-&amp;gt;ForeachRow&amp;lt;FItemInfo&amp;gt;(&amp;#34;FindItem&amp;#34;, [&amp;amp;](const FName&amp;amp; key, const FItemInfo&amp;amp; item) {  // Do something here }); Find a Row in UDataTable FItemInfo* itemInfo = itemDT-&amp;gt;FindRow&amp;lt;FItemInfo&amp;gt;(ROW_NAME, &amp;#34;FindItem&amp;#34;); Create UObject Instance UTextBlock* text = NewObject&amp;lt;UTextBlock&amp;gt;(btn, FName(&amp;#34;text&amp;#34;)); Hide Field on Certain Condition UPROPERTY(EditAnywhere, meta=(Condition=&amp;#34;YOUR_CONDITION&amp;#34;, EditConditionHides)) float speed; Create Min Max Slider for Field UPROPERTY(EditAnywhere, meta = (ClampMin = &amp;#34;1&amp;#34;, ClampMax = &amp;#34;10&amp;#34;)) int32 totalSpawned; Instantiate a UObject/Blueprint/WBP MyClass* instance = NewObject&amp;lt;MyClass&amp;gt;();  UPROPERTY(EditDefaultsOnly, BlueprintReadWrite) TSubclassOf&amp;lt;MyClass&amp;gt; MyClassType;  // UObject Subclass NewObject&amp;lt;ActorClass&amp;gt;(MyClassType);  // Actor Subclass GetWorld()-&amp;gt;SpawnActor&amp;lt;ActorClass&amp;gt;(MyClassType);  // Widget Subclass MyWidget* widget = CreateWidget&amp;lt;MyWidget&amp;gt;(this, MyWidgetType);  The code above is not tested and is used for reference only.</description>
    </item>
    
  </channel>
</rss>
